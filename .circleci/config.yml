version: 2.1
orbs:
  codecov: codecov/codecov@3.1.0

jobs:
  install_and_update_dependencies:
    docker:
      - image: cimg/python:3.12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}-{{ checksum "ballot_writer/requirements.txt" }}
      - run: pip install -U pipenv pip --quiet --no-input
      - run: pipenv verify
      - run: pipenv sync --dev
      - run: pipenv run ruff-check
      - run: pipenv run ruff format --check .
      - run: pipenv run pipenv check # before save_cache so an insecure cache is never saved
      - save_cache:
          when: on_success
          paths:
            - ~/.local/share/virtualenvs/
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}-{{ checksum "ballot_writer/requirements.txt" }}
  sam_deploy:
    docker:
      - image: public.ecr.aws/sam/build-python3.12:latest
    working_directory: ~/repo/
    parameters:
      dc-environment:
        type: enum
        enum: [ development, production ]
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - run: |
          pip install setuptools wheel
          sam build
      - run:
          name: "sam deploy"
          command: |
            sam deploy --config-env <<parameters.dc-environment>>

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - install_and_update_dependencies
      - sam_deploy:
          name: sam_deploy_development
          dc-environment: development
          requires:
            - install_and_update_dependencies
          context: [ deployment-development-wcivf ]
          filters: { branches: { only: [ main ] } }
      - sam_deploy:
          name: sam_deploy_production
          dc-environment: production
          requires:
            - sam_deploy_development
          context: [ deployment-production-wcivf ]
          filters: { branches: { only: [ main ] } }
